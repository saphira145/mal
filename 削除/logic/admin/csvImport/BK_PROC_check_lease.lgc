<?php


	/*----------------------------------------------------
	    ロジック
	----------------------------------------------------*/
	ini_set("memory_limit", "256M");
	ini_set("post_max_size", "32M");
	ini_set("upload_max_filesize", "32M");
	ini_set("max_execution_time", "120");
	ini_set("max_input_time", "120");

		// アップロードファイルを一時ディレクトリへ
		list( $filePath, $output["tmpFaqCSVName"] ) = $class["csvImport_1"]->copy_tempDir( $output["importCSVFile"]["tmp_name"] );

		// コピーできない場合は終了
		if( !file_exists( $filePath ) ) {
			return;
		}


		// CSVファイル読み込み
		$i   = 0;
		$row = 1;
		$handle = fopen ( $filePath, "r" );

		while ( ( $data = fgetcsv_reg ( $handle ) ) !== FALSE) {

			if( $row == 1){
				$row++;
				continue;
			}

			// 文字コード変換（SJIS-winからUTF-8に変換）
			$CSVData = $class["csvImport_1"]->mbConvertEncodingDeep( $data, "SJIS-win", "UTF-8" );

			// 入力チェック
			unset( $errData );
			$errData = check_CSVData( $CSVData );

			// エラーメッセージ格納
			if( count( $errData ) > 0 ) {
				$output["errList"][$i]["row"]    = $row;
				$output["errList"][$i]["detail"] = $errData;
				$i++;
				// エラーが100行ある場合はチェックをストップする
				if( $i > 100 ) {
					break;
				}
			}

			// 読み込み行のカウントアップ
			$row++;
		}

		fclose($handle);


		// 登録予定件数エラーがない場合表示
		if( count( $output["errList"] ) == 0 ) {
			$output["entryCount"] = $row - 2;
		}





	/*--------------------------------------------------
	  入力チェック
	---------------------------------------------------*/
	function check_CSVData ( $CSVData ) {

		unset( $modelID );

		foreach( $CSVData as $key => $val ) {

			unset( $err );

			// メーカーコード取得
			$makerCode = $CSVData[0];

			// 車種コード取得
			$modelCode = $CSVData[2];


			// メーカーＣＤ（１フィールド目）
			if( $key == 0 ) {
				$err = check_makerCode( $val, $key );
				if( count( $err ) > 0 ) {
					$ret[] = $err;
				}
			}

			// メーカー名（２フィールド目）
			if( $key == 1 ) {
				$err = check_makerName( $val, $key );
				if( count( $err ) > 0 ) {
					$ret[] = $err;
				}
			}

			// 車種ＣＤ（３フィールド目）
			if( $key == 2 ) {
				$err = check_modelCode( $val, $key, $makerCode );
				if( count( $err ) > 0 ) {
					$ret[] = $err;
				}
			}

			// 車種名（４フィールド目）
			if( $key == 3 ) {
				$err = check_modelName( $val, $key, $makerCode );
				if( count( $err ) > 0 ) {
					$ret[] = $err;
				}
			}

			// 車種グレードＩＤ（５フィールド目）
			if( $key == 4 ) {
				$err = check_ommonCarGradeID( $val, $key );
				if( count( $err ) > 0 ) {
					$ret[] = $err;
				}
			}


			// 車種グレード名（６フィールド目）
			if( $key == 5 ) {
				$err = check_grade( $val, $key );
				if( count( $err ) > 0 ) {
					$ret[] = $err;
				}
			}

			// 駆動方式（７フィールド目）
			if( $key == 6 ) {
				$err = check_driveSystem( $val, $key );
				if( count( $err ) > 0 ) {
					$ret[] = $err;
				}
			}

			// 車両本体価格（８フィールド目）
			if( $key == 7 ) {
				$err = check_taxIncludedPrice( $val, $key );
				if( count( $err ) > 0 ) {
					$ret[] = $err;
				}
			}

			// 認定型式[車名型式]（９フィールド目）
			if( $key == 8 ) {
				$err = check_carNameModel( $val, $key );
				if( count( $err ) > 0 ) {
					$ret[] = $err;
				}
			}

			// トランスミッション区分（１０フィールド目）
			if( $key == 9 ) {
				$err = check_transmission( $val, $key );
				if( count( $err ) > 0 ) {
					$ret[] = $err;
				}
			}

			// 最大積載量（１１フィールド目）
			if( $key == 10 ) {
				$err = check_maxCapacity( $val, $key );
				if( count( $err ) > 0 ) {
					$ret[] = $err;
				}
			}

			// 乗車定員（１２フィールド目）
			if( $key == 11 ) {
				$err = check_capacity( $val, $key );
				if( count( $err ) > 0 ) {
					$ret[] = $err;
				}
			}

			// 使用燃料（１３フィールド目）
			if( $key == 12 ) {
				$err = check_useFuel( $val, $key );
				if( count( $err ) > 0 ) {
					$ret[] = $err;
				}
			}

			// 総排気量（１４フィールド目）
			if( $key == 13 ) {
				$err = check_totalEmission( $val, $key );
				if( count( $err ) > 0 ) {
					$ret[] = $err;
				}
			}

			// 車検サイクル[初回]（１５フィールド目）
			if( $key == 14 ) {
				$err = check_leaseValue( $val, $key );
				if( count( $err ) > 0 ) {
					$ret[] = $err;
				}
			}

			// 車検サイクル[初回]（１６フィールド目）
			if( $key == 15 ) {
				$err = check_leaseValue( $val, $key );
				if( count( $err ) > 0 ) {
					$ret[] = $err;
				}
			}

			// 代表車種グレード（１７フィールド目）
			if( $key == 16 ) {
				$err = check_carGradeFlg( $val, $key );
				if( count( $err ) > 0 ) {
					$ret[] = $err;
				}
			}

			// 調達価格（１８フィールド目）
			if( $key == 17 ) {
				$err = check_leaseValue( $val, $key );
				if( count( $err ) > 0 ) {
					$ret[] = $err;
				}
			}

			// 登録法定費用（１９フィールド目）
			if( $key == 18 ) {
				$err = check_leaseValue( $val, $key );
				if( count( $err ) > 0 ) {
					$ret[] = $err;
				}
			}

			// 登録代行費用（２０フィールド目）
			if( $key == 19 ) {
				$err = check_leaseValue( $val, $key );
				if( count( $err ) > 0 ) {
					$ret[] = $err;
				}
			}

			// 資金管理料金（２１フィールド目）
			if( $key == 20 ) {
				$err = check_leaseValue( $val, $key );
				if( count( $err ) > 0 ) {
					$ret[] = $err;
				}
			}

			// メンテナンス区分（２２フィールド目）
			if( $key == 21 ) {
				$err = check_mainteID( $val, $key );
				if( count( $err ) > 0 ) {
					$ret[] = $err;
				}
			}

			// 区分状態（２３フィールド目）
			if( $key == 22 ) {
				$err = check_mainteFlg( $val, $key );
				if( count( $err ) > 0 ) {
					$ret[] = $err;
				}
			}
		}

		return $ret;
	}









?>